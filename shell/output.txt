python3 shell_test.py
Sanitizer output (main process) for test fork fails:
  ==108376==LeakSanitizer has encountered a fatal error.
  ==108376==HINT: For debugging, try setting environment variable LSAN_OPTIONS=verbosity=1:log_threads=1
  ==108376==HINT: LeakSanitizer does not work under ptrace (strace, gdb, etc)


Failed test 'pipe in the end without a command is invalid'
Test input:
  /bin/ls |
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  <empty>
Expected stderr regular expression pattern: (extra lines allowed)
  .*invalid command.*
Errors:
  in stderr: could not find match for pattern [.*invalid command.*] in []





Failed test 'fork fails in a pipeline'
Test input:
  /bin/cat | /bin/cat | /bin/cat | /bin/cat
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Sanitizer output (main process):
  ==108973==LeakSanitizer has encountered a fatal error.
  ==108973==HINT: For debugging, try setting environment variable LSAN_OPTIONS=verbosity=1:log_threads=1
  ==108973==HINT: LeakSanitizer does not work under ptrace (strace, gdb, etc)
Expected stdout regular expression pattern:
  > > 
Expected stderr regular expression pattern: (extra lines allowed)
  .+
(This test also has some important extra setup code that might do something like restrict the number of file descriptors or child processes that can be created.)
Errors:
  in stdout: could not find a match for pattern [> > ] in line [> To be implemented in Part 2. Exiting]
  in stdout: could not find match for pattern [> > ] in ['> To be implemented in Part 2. Exiting']
  in stderr: could not find match for pattern [.+] in []





Failed test 'two command pipeline without arguments'
Test input:
  test/example_out.sh | test/example_sed.sh
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*foo XXX baz
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find match for pattern [.*foo XXX baz] in ['> To be implemented in Part 2. Exiting']





Failed test 'two command pipeline without arguments, then use output'
Test input:
  test/example_out.sh | test/example_sed.sh
  test/example_out.sh
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*foo XXX baz
  .*foo bar baz
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find match for pattern [.*foo XXX baz] in ['> To be implemented in Part 2. Exiting']





Failed test 'two command pipeline without arguments twice'
Test input:
  test/example_out.sh | test/example_sed.sh
  test/example_out.sh | test/example_sed2.sh
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*foo XXX baz
  .*foo bar YYY
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find match for pattern [.*foo XXX baz] in ['> To be implemented in Part 2. Exiting']





Failed test 'three command pipeline without arguments (outputs)'
Test input:
  test/example_out.sh | test/example_sed2.sh | test/example_sed.sh
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*foo XXX YYY
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find match for pattern [.*foo XXX YYY] in ['> To be implemented in Part 2. Exiting']





Failed test 'three command pipeline without arguments (status codes)'
Test input:
  test/example_out.sh | test/example_sed2.sh | test/example_sed.sh
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*test/example_out.sh.*exit status:.*0.*
  .*test/example_sed2.sh.*exit status:.*0.*
  .*test/example_sed.sh.*exit status:.*0.*
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find match for pattern [.*test/example_out.sh.*exit status:.*0.*] in ['> To be implemented in Part 2. Exiting']





Failed test 'three command pipeline without arguments where order matters (1)'
Test input:
  test/example_out.sh | test/example_sed2.sh | test/example_sed3.sh
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*foo bar ZZZ
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find match for pattern [.*foo bar ZZZ] in ['> To be implemented in Part 2. Exiting']





Failed test 'three command pipeline without arguments where order matters (2)'
Test input:
  test/example_out.sh | test/example_sed3.sh | test/example_sed2.sh
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*foo bar YYY
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find match for pattern [.*foo bar YYY] in ['> To be implemented in Part 2. Exiting']





Failed test '|s without spaces is not a pipeline'
Test input:
  /bin/echo this|argument|has|pipes
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern:
  > this\|argument\|has\|pipes
  .*exit status: 0.*
  > 
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find a match for pattern [> this\|argument\|has\|pipes] in line [> To be implemented in Part 2. Exiting]
  in stdout: could not find match for pattern [> this\|argument\|has\|pipes] in ['> To be implemented in Part 2. Exiting']





Failed test '|s without spaces mixed with | with spaces (output)'
Test input:
  /bin/echo this|argument|has|pipes | /bin/sed -e s/argument/XXX/
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*this\|XXX\|has\|pipes
  > 
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find match for pattern [.*this\|XXX\|has\|pipes] in ['> To be implemented in Part 2. Exiting']





Failed test '|s without spaces mixed with | with spaces (exit statuses)'
Test input:
  /bin/echo this|argument|has|pipes | /bin/sed -e s/argument/XXX/
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*exit status: 0.*
  .*exit status: 0.*
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find match for pattern [.*exit status: 0.*] in ['> To be implemented in Part 2. Exiting']





Failed test 'simple pipe output'
Test input:
  /bin/echo testing  one two three | /bin/sed -e s/one/XXX/
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*testing XXX two three
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find match for pattern [.*testing XXX two three] in ['> To be implemented in Part 2. Exiting']





Failed test 'simple pipe exit status'
Test input:
  /bin/echo testing one two three | /bin/sed -e s/one/XXX/
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*exit status: 0.*
  .*exit status: 0.*
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find match for pattern [.*exit status: 0.*] in ['> To be implemented in Part 2. Exiting']





Failed test 'longer pipeline (output)'
Test input:
  /bin/echo testing one two three | /bin/sed -e s/one/XXX/ | /bin/sed -e s/two/YYY/
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*testing XXX YYY three
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find match for pattern [.*testing XXX YYY three] in ['> To be implemented in Part 2. Exiting']





Failed test 'longer pipeline exit status (all 0s)'
Test input:
  /bin/echo testing one two three | /bin/sed -e s/one/xxx/ | /bin/sed -e s/two/yyy/
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*exit status: 0.*
  .*exit status: 0.*
  .*exit status: 0.*
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find match for pattern [.*exit status: 0.*] in ['> To be implemented in Part 2. Exiting']





Failed test 'pipeline with two exit status 1s and one 0 has 1s'
Test input:
  /bin/true ignored 1 | /bin/false ignored 2 | /bin/false ignored 3
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*exit status: 1.*
  .*exit status: 1.*
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find match for pattern [.*exit status: 1.*] in ['> To be implemented in Part 2. Exiting']





Failed test 'pipeline with two exit status 1s and one 0 has 0'
Test input:
  /bin/true some ignored arugments | /bin/false ignored argument | /bin/false more ignored argument
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*exit status: 0.*
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find match for pattern [.*exit status: 0.*] in ['> To be implemented in Part 2. Exiting']





Failed test '100 pipelines (with limit of 50 open files)'
Test input:
  /bin/echo a test | /bin/sed -e s/test/xxx/
  /bin/echo a test | /bin/sed -e s/test/xxx/
  /bin/echo a test | /bin/sed -e s/test/xxx/
  /bin/echo a test | /bin/sed -e s/test/xxx/
  /bin/echo a test | /bin/sed -e s/test/xxx/
  [plus 96 more lines, not shown]
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*a xxx
  .*a xxx
  .*a xxx
  .*a xxx
  .*a xxx
  [plus 95 more lines, not shown]
Expected stderr regular expression pattern:
  <empty>
(This test also has some important extra setup code that might do something like restrict the number of file descriptors or child processes that can be created.)
Errors:
  in stdout: could not find match for pattern [.*a xxx] in ['> To be implemented in Part 2. Exiting']





Failed test 'redirect from operator is invalid'
Test input:
  /bin/false < | 
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  > (?:> |/bin/false.*exit status: 255|/bin/false(?!.*exit status:)\s*:)
Expected stderr regular expression pattern: (extra lines allowed)
  .*invalid command.*
Errors:
  in stdout: could not find match for pattern [> (?:> |/bin/false.*exit status: 255|/bin/false(?!.*exit status:)\s*:)] in ['> To be implemented in Part 2. Exiting']
  in stderr: could not find match for pattern [.*invalid command.*] in []





Failed test 'large amount of data through pipe'
Test input:
  /bin/head -c 1048576 /dev/zero | /bin/cat | /usr/bin/wc -c
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*1048576.*
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find match for pattern [.*1048576.*] in ['> To be implemented in Part 2. Exiting']





Failed test 'pipe with redirect at end'
Test input:
  test/example_out.sh | test/example_sed.sh > test/output.txt
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern:
  > test/example_out.sh.*exit status: 0.*
  test/example_sed.sh.*exit status: 0.*
  > 
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find a match for pattern [> test/example_out.sh.*exit status: 0.*] in line [> To be implemented in Part 2. Exiting]
  in stdout: could not find match for pattern [> test/example_out.sh.*exit status: 0.*] in ['> To be implemented in Part 2. Exiting']
  file test/output.txt was not created





Failed test 'pipe with redirect at beginning'
Test input:
  /bin/cat < test/input.txt  | /bin/sed s/example/EXAMPLE/
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern: (extra lines allowed)
  .*This is an EXAMPLE input file.
  .*Which has multiple lines.
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find match for pattern [.*This is an EXAMPLE input file.] in ['> To be implemented in Part 2. Exiting']





Failed test 'pipe with redirect at beginning and end'
Test input:
  /bin/cat < test/input.txt  | /bin/sed s/example/EXAMPLE/ > test/output.txt
  exit
Actual stdout:
  > To be implemented in Part 2. Exiting
  
Actual stderr:
  
Expected stdout regular expression pattern:
  > /bin/cat.*exit status: 0.*
  /bin/sed.*exit status: 0.*
  > 
Expected stderr regular expression pattern:
  <empty>
Errors:
  in stdout: could not find a match for pattern [> /bin/cat.*exit status: 0.*] in line [> To be implemented in Part 2. Exiting]
  in stdout: could not find match for pattern [> /bin/cat.*exit status: 0.*] in ['> To be implemented in Part 2. Exiting']
  file test/output.txt was not created



64 tests passed and 24 tests failed.
---
Note on interpreting test output patterns:
All expected values matched against a "regular expression" where:
    .* means any string (including empty strings)
    .+ means any string (excluding empty strings)
    everything is matched case-insensitively

